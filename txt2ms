#!/bin/awk -f

# if someone wants to use that:
#   ‥text‥   to print italic
#   ‥‥text‥‥ to print bold
# it might be better to just use \fI and \fB directly
function parsed(a){
	if(dontparse) return a
	gsub(/‥‥[^‥]+‥‥/, "\\fB&\\fR", a)
	gsub(/‥‥/, "", a)
	gsub(/‥[^‥]+‥/, "\\fI&\\fR", a)
	gsub(/‥/, "", a)
	return a
}

BEGIN {
	# define global vars
	print ".ds LQ \"\""
	
	# define .XS macro (table of contents)
	print ".de XS"
	print ".nr |i (\\\\$1i-1i)/3u"
	print ".ie '\\\\$1'0' .tm TOC:.XL \\\\$1 \\\\*(LQ\\\\$2\\\\*(LQ \\\\n%"
	print ".el .tm TOC:.XL \\\\$1 \\\\*(LQ\\h'\\\\n(|iu'\\\\*(SN\\0\\0\\\\$2\\\\*(LQ \\\\n%"
	print ".."
	
	# define .XL macro (tables)
	print ".tm DEF:.de XL"
	print ".tm DEF:.nr |i \\\\\\\\$1"
	print ".tm DEF:.ta \\\\\\\\n(LLuR"
	print ".tm DEF:.ie \\\\\\\\$1>1 \\\\"
	print ".tm DEF:\\\\{\\\\"
	print ".tm DEF:\\\\\\\\$2 \\\\a\\\\|\\\\|\\\\\\\\$3"
	print ".tm DEF:.vs 15pt"
	print ".tm DEF:.\\\\}"
	print ".tm DEF:.el \\\\"
	print ".tm DEF:\\\\{\\\\"
	print ".tm DEF:\\\\fB\\\\\\\\$2	\\\\|\\\\|\\\\\\\\$3\\\\fR"
	print ".tm DEF:.vs 25pt"
	print ".tm DEF:.\\\\}"
	print ".tm DEF:.."

	print ".tm TOC:.NL"
	print ".tm TOC:.LP"
}

firstheader && NR == 1 {
	printf ".TL\n%s\n", parsed($0)
	nextline = 1
}

$1 ~ /^.KT$/ {
	gsub(/"/, "", $2) # ID
	gsub(/"/, "", $3) # Name
	gsub(/"/, "", $4) # Title
	keepnr[$2]++
	printf ".tm %s:.XL 2 \\*(LQ%d\\\\0\\\\0%s\\*(LQ \\n%%\n", $2, keepnr[$2], $4
	print  ".IP"
	printf "\\fI%s\\ %d:\\fR\\ %s\n", $3, keepnr[$2], $4
	nextline = 1
}

$1 ~ /^#+$/ {
	l = length($1)
	$1 = ""
	sub(/^[ \t]*/, "")
	printf ".NH %d\n.LG\n%s\n.NL\n", l, parsed($0)
	printf ".XS %d \"%s\"\n", l, parsed($0)
	istitle = 1
	nextline = 1
}

$1 ~ /^\$+$/ {
	$1 = ""
	sub(/^[ \t]*/, "")
	printf ".SH\n.LG\n%s\n.NL\n", parsed($0)
	printf ".XS 0 \"%s\"\n", parsed($0)
	istitle = 1
	nextline = 1
}

$1 ~ /^-/ {
	$1 = ""
	sub(/^[ \t]*/, "")
	printf ".IP •\n%s\n", parsed($0)
	nextline = 1
}

/^$/ {
	if(istitle)
		printf ".LP"
	else
		printf ".PP"
	istitle = 0
}

{
	if(nextline == 0)
		print parsed($0)
	else
		nextline = 0
}
